// <auto-generated />
using HOUPE.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HOUPE.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HOUPE.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost");

                    b.Property<string>("Information");

                    b.Property<string>("Nutrition");

                    b.Property<int>("QuantityNight")
                        .HasMaxLength(2);

                    b.Property<int>("ToursId");

                    b.Property<string>("TypeOfRooms");

                    b.Property<string>("hotel");

                    b.HasKey("Id");

                    b.HasIndex("ToursId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("HOUPE.Models.ImageHotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HotelId");

                    b.Property<string>("ImageAdress");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("ImageHotels");
                });

            modelBuilder.Entity("HOUPE.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HotelsId");

                    b.Property<int>("QuantityAdults");

                    b.Property<int>("QuantityChildren");

                    b.Property<double>("TotalCost");

                    b.Property<int>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("HotelsId")
                        .IsUnique();

                    b.HasIndex("UsersId")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HOUPE.Models.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageAdress");

                    b.Property<string>("Tourss")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("HOUPE.Models.TravelBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Enterteiment");

                    b.Property<string>("Excitement");

                    b.Property<int>("HotelsId");

                    b.Property<int>("Nutrition");

                    b.Property<int>("Room");

                    b.Property<int>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("HotelsId")
                        .IsUnique();

                    b.HasIndex("UsersId");

                    b.ToTable("TravelBoxs");
                });

            modelBuilder.Entity("HOUPE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<bool>("Type");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HOUPE.Models.UsersImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageAdress");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UsersImages");
                });

            modelBuilder.Entity("HOUPE.Models.UsersRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuantityOrders");

                    b.Property<string>("Status");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UsersRooms");
                });

            modelBuilder.Entity("HOUPE.Models.Hotel", b =>
                {
                    b.HasOne("HOUPE.Models.Tour", "Tours")
                        .WithMany("Hotels")
                        .HasForeignKey("ToursId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HOUPE.Models.ImageHotel", b =>
                {
                    b.HasOne("HOUPE.Models.Hotel", "Hotels")
                        .WithMany("ImageHotels")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HOUPE.Models.Order", b =>
                {
                    b.HasOne("HOUPE.Models.Hotel", "Hotels")
                        .WithOne("Orders")
                        .HasForeignKey("HOUPE.Models.Order", "HotelsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HOUPE.Models.User", "Users")
                        .WithOne("Orders")
                        .HasForeignKey("HOUPE.Models.Order", "UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HOUPE.Models.TravelBox", b =>
                {
                    b.HasOne("HOUPE.Models.Hotel", "Hotels")
                        .WithOne("TravelBoxs")
                        .HasForeignKey("HOUPE.Models.TravelBox", "HotelsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HOUPE.Models.User", "Users")
                        .WithMany("TravelBoxs")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HOUPE.Models.UsersImage", b =>
                {
                    b.HasOne("HOUPE.Models.User", "Users")
                        .WithOne("UsersImages")
                        .HasForeignKey("HOUPE.Models.UsersImage", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HOUPE.Models.UsersRoom", b =>
                {
                    b.HasOne("HOUPE.Models.User", "Users")
                        .WithOne("UsersRooms")
                        .HasForeignKey("HOUPE.Models.UsersRoom", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
